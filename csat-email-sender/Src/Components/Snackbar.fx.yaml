Snackbar As CanvasComponent:
    OnHide():
        ThisProperty:
            Default: =true
    OnSelect():
        ThisProperty:
            Default: =true
    ActionColor: |-
        =ColorFade(ColorValue("#6200EE"), 70%)
    ActionText: =""
    BackgroundColor: |-
        ="#000000"
    BorderRadius: =50
    BoxShadow: =true
    Duration: =5000
    Fill: =Color.Transparent
    Font: ="Roboto"
    FontSize: =20
    FontWeight: ="Text"
    Height: =90
    Margin: =20
    OnAnimation: =true
    OnTimerStart: =true
    PaddingLeft: =20
    Text: ="You really just did that?!"
    TextColor: |-
        ="#FFFFFF"
    TransitionTime: =200
    Width: =600
    X: =0
    Y: =0
    ZIndex: =1

    tmr_Snack As timer:
        AutoPause: =false
        Duration: =Snackbar.Duration
        Fill: =RGBA(56, 96, 178, 1)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(56, 96, 178, 1), -20%)
        OnTimerEnd: =Snackbar.OnHide()
        Reset: =!Snackbar.OnTimerStart
        Start: =Snackbar.OnTimerStart
        Visible: =false
        X: =60
        Y: =50
        ZIndex: =1

    con_Snack As groupContainer.manualLayoutContainer:
        Height: =Parent.Height
        Width: =Parent.Width
        Y: |-
            =With(
                {
                    ShrinkTimer: tmr_Snack.Value + Snackbar.TransitionTime - Snackbar.Duration
                },
                If(
                    Snackbar.OnAnimation,
                    If(
                        tmr_Snack.Value <= Snackbar.TransitionTime,
                        -Snackbar.Height * (tmr_Snack.Value - Snackbar.TransitionTime)  / Snackbar.TransitionTime,
                        ShrinkTimer >= 0,
                        Snackbar.Height * (ShrinkTimer) / Snackbar.TransitionTime,
                        0
                    ),
                    0
                )
            )
        ZIndex: =2

        html_SnackShadow As htmlViewer:
            Height: =Snackbar.Height
            HtmlText: |-
                ="<div 
                    style='
                        position: absolute;
                        left: "& Snackbar.Margin &"px;
                        top: "&Snackbar.Margin &"px;
                        width: "& btn_SnackBkg.Width &"px;
                        height: "& btn_SnackBkg.Height &"px;
                        border-radius: "& Snackbar.BorderRadius &"px;        
                        box-shadow: 1px 1px 2px 2px rgba(0,0,0,0.25);
                        '
                >
                
                </div>"
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Width: =Snackbar.Width
            ZIndex: =1

        btn_SnackBkg As button:
            Align: =If(btn_SnackAction.Visible = true, Align.Left, Align.Center)
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: =ColorValue(Snackbar.TextColor)
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =ColorValue(Snackbar.TextColor)
            DisabledFill: =ColorValue(Snackbar.BackgroundColor)
            DisplayMode: =DisplayMode.Disabled
            Fill: =ColorValue(Snackbar.BackgroundColor)
            FocusedBorderColor: =Color.Transparent
            FocusedBorderThickness: =0
            Font: =Snackbar.Font
            FontWeight: =Snackbar.FontWeight
            Height: =Snackbar.Height - 2 * Snackbar.Margin
            HoverColor: =RGBA(255, 255, 255, 1)
            HoverFill: =Self.Fill
            PaddingBottom: =0
            PaddingLeft: =Snackbar.PaddingLeft
            PaddingRight: =If(btn_SnackAction.Visible, btn_SnackAction.Width + 20, 20)
            PaddingTop: =0
            PressedFill: =RGBA(0, 0, 0, 0.5)
            RadiusBottomLeft: =Snackbar.BorderRadius
            RadiusBottomRight: =Snackbar.BorderRadius
            RadiusTopLeft: =Snackbar.BorderRadius
            RadiusTopRight: =Snackbar.BorderRadius
            Size: =Snackbar.FontSize
            Text: =Snackbar.Text
            Width: =Snackbar.Width - 2 * Snackbar.Margin
            X: =Snackbar.Margin
            Y: =Snackbar.Margin
            ZIndex: =2

        btn_SnackAction As button:
            BorderStyle: =BorderStyle.None
            Color: =Snackbar.ActionColor
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            DisabledFill: =Color.Transparent
            Fill: =Color.Transparent
            Font: =Snackbar.Font
            FontWeight: =Snackbar.FontWeight
            Height: =btn_SnackBkg.Height
            HoverColor: =ColorFade(Self.Color, 30%)
            HoverFill: =Color.Transparent
            OnSelect: =Snackbar.OnSelect()
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            PressedFill: =Color.Transparent
            Size: =Snackbar.FontSize
            TabIndex: =1
            Text: =Snackbar.ActionText
            Visible: =Len(Self.Text) > 0
            Width: =150
            X: =btn_SnackBkg.Width + btn_SnackBkg.X - Self.Width
            Y: =btn_SnackBkg.Y
            ZIndex: =3

